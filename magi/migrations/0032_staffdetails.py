# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings
import magi.utils


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('magi', '0031_auto_20180404_0701'),
    ]

    operations = [
        migrations.CreateModel(
            name='StaffDetails',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('discord_username', models.CharField(max_length=100, null=True, verbose_name=b'Discord username')),
                ('preferred_name', models.CharField(max_length=100, null=True, verbose_name=b'What would you prefer to be called?')),
                ('pronouns', models.CharField(max_length=32, null=True, verbose_name=b'Preferred pronouns')),
                ('image', models.ImageField(help_text=b"Photograph of yourself. Real life photos look friendlier when we introduce the team. If you really don't want to show your face, you can use an avatar, but we prefer photos :)", upload_to=magi.utils.uploadToRandom(b'staff_photos/'), null=True, verbose_name='Image')),
                ('description', models.TextField(help_text=b'You can use markdown to add links.', null=True, verbose_name=b'Self introduction')),
                ('favorite_food', models.CharField(max_length=100, null=True)),
                ('d_favorite_foods', models.TextField(null=True, verbose_name='Favorite food')),
                ('hobbies', models.CharField(max_length=100, null=True)),
                ('d_hobbiess', models.TextField(null=True, verbose_name='hobbies')),
                ('nickname', models.CharField(max_length=100, null=True, verbose_name=b'Super hero / Rock star name')),
                ('c_hashtags', models.CharField(help_text=b'Separate with comma', max_length=200, null=True, verbose_name=b'Hashtags that describe yourself')),
                ('staff_since', models.DateField(null=True, verbose_name=b'Staff since')),
                ('i_timezone', models.PositiveIntegerField(null=True, verbose_name=b'Timezone', choices=[(0, b'Africa/Abidjan'), (1, b'Africa/Accra'), (2, b'Africa/Addis_Ababa'), (3, b'Africa/Algiers'), (4, b'Africa/Asmara'), (5, b'Africa/Bamako'), (6, b'Africa/Bangui'), (7, b'Africa/Banjul'), (8, b'Africa/Bissau'), (9, b'Africa/Blantyre'), (10, b'Africa/Brazzaville'), (11, b'Africa/Bujumbura'), (12, b'Africa/Cairo'), (13, b'Africa/Casablanca'), (14, b'Africa/Ceuta'), (15, b'Africa/Conakry'), (16, b'Africa/Dakar'), (17, b'Africa/Dar_es_Salaam'), (18, b'Africa/Djibouti'), (19, b'Africa/Douala'), (20, b'Africa/El_Aaiun'), (21, b'Africa/Freetown'), (22, b'Africa/Gaborone'), (23, b'Africa/Harare'), (24, b'Africa/Johannesburg'), (25, b'Africa/Juba'), (26, b'Africa/Kampala'), (27, b'Africa/Khartoum'), (28, b'Africa/Kigali'), (29, b'Africa/Kinshasa'), (30, b'Africa/Lagos'), (31, b'Africa/Libreville'), (32, b'Africa/Lome'), (33, b'Africa/Luanda'), (34, b'Africa/Lubumbashi'), (35, b'Africa/Lusaka'), (36, b'Africa/Malabo'), (37, b'Africa/Maputo'), (38, b'Africa/Maseru'), (39, b'Africa/Mbabane'), (40, b'Africa/Mogadishu'), (41, b'Africa/Monrovia'), (42, b'Africa/Nairobi'), (43, b'Africa/Ndjamena'), (44, b'Africa/Niamey'), (45, b'Africa/Nouakchott'), (46, b'Africa/Ouagadougou'), (47, b'Africa/Porto-Novo'), (48, b'Africa/Sao_Tome'), (49, b'Africa/Tripoli'), (50, b'Africa/Tunis'), (51, b'Africa/Windhoek'), (52, b'America/Adak'), (53, b'America/Anchorage'), (54, b'America/Anguilla'), (55, b'America/Antigua'), (56, b'America/Araguaina'), (57, b'America/Argentina/Buenos_Aires'), (58, b'America/Argentina/Catamarca'), (59, b'America/Argentina/Cordoba'), (60, b'America/Argentina/Jujuy'), (61, b'America/Argentina/La_Rioja'), (62, b'America/Argentina/Mendoza'), (63, b'America/Argentina/Rio_Gallegos'), (64, b'America/Argentina/Salta'), (65, b'America/Argentina/San_Juan'), (66, b'America/Argentina/San_Luis'), (67, b'America/Argentina/Tucuman'), (68, b'America/Argentina/Ushuaia'), (69, b'America/Aruba'), (70, b'America/Asuncion'), (71, b'America/Atikokan'), (72, b'America/Bahia'), (73, b'America/Bahia_Banderas'), (74, b'America/Barbados'), (75, b'America/Belem'), (76, b'America/Belize'), (77, b'America/Blanc-Sablon'), (78, b'America/Boa_Vista'), (79, b'America/Bogota'), (80, b'America/Boise'), (81, b'America/Cambridge_Bay'), (82, b'America/Campo_Grande'), (83, b'America/Cancun'), (84, b'America/Caracas'), (85, b'America/Cayenne'), (86, b'America/Cayman'), (87, b'America/Chicago'), (88, b'America/Chihuahua'), (89, b'America/Costa_Rica'), (90, b'America/Creston'), (91, b'America/Cuiaba'), (92, b'America/Curacao'), (93, b'America/Danmarkshavn'), (94, b'America/Dawson'), (95, b'America/Dawson_Creek'), (96, b'America/Denver'), (97, b'America/Detroit'), (98, b'America/Dominica'), (99, b'America/Edmonton'), (100, b'America/Eirunepe'), (101, b'America/El_Salvador'), (102, b'America/Fortaleza'), (103, b'America/Glace_Bay'), (104, b'America/Godthab'), (105, b'America/Goose_Bay'), (106, b'America/Grand_Turk'), (107, b'America/Grenada'), (108, b'America/Guadeloupe'), (109, b'America/Guatemala'), (110, b'America/Guayaquil'), (111, b'America/Guyana'), (112, b'America/Halifax'), (113, b'America/Havana'), (114, b'America/Hermosillo'), (115, b'America/Indiana/Indianapolis'), (116, b'America/Indiana/Knox'), (117, b'America/Indiana/Marengo'), (118, b'America/Indiana/Petersburg'), (119, b'America/Indiana/Tell_City'), (120, b'America/Indiana/Vevay'), (121, b'America/Indiana/Vincennes'), (122, b'America/Indiana/Winamac'), (123, b'America/Inuvik'), (124, b'America/Iqaluit'), (125, b'America/Jamaica'), (126, b'America/Juneau'), (127, b'America/Kentucky/Louisville'), (128, b'America/Kentucky/Monticello'), (129, b'America/Kralendijk'), (130, b'America/La_Paz'), (131, b'America/Lima'), (132, b'America/Los_Angeles'), (133, b'America/Lower_Princes'), (134, b'America/Maceio'), (135, b'America/Managua'), (136, b'America/Manaus'), (137, b'America/Marigot'), (138, b'America/Martinique'), (139, b'America/Matamoros'), (140, b'America/Mazatlan'), (141, b'America/Menominee'), (142, b'America/Merida'), (143, b'America/Metlakatla'), (144, b'America/Mexico_City'), (145, b'America/Miquelon'), (146, b'America/Moncton'), (147, b'America/Monterrey'), (148, b'America/Montevideo'), (149, b'America/Montreal'), (150, b'America/Montserrat'), (151, b'America/Nassau'), (152, b'America/New_York'), (153, b'America/Nipigon'), (154, b'America/Nome'), (155, b'America/Noronha'), (156, b'America/North_Dakota/Beulah'), (157, b'America/North_Dakota/Center'), (158, b'America/North_Dakota/New_Salem'), (159, b'America/Ojinaga'), (160, b'America/Panama'), (161, b'America/Pangnirtung'), (162, b'America/Paramaribo'), (163, b'America/Phoenix'), (164, b'America/Port-au-Prince'), (165, b'America/Port_of_Spain'), (166, b'America/Porto_Velho'), (167, b'America/Puerto_Rico'), (168, b'America/Rainy_River'), (169, b'America/Rankin_Inlet'), (170, b'America/Recife'), (171, b'America/Regina'), (172, b'America/Resolute'), (173, b'America/Rio_Branco'), (174, b'America/Santa_Isabel'), (175, b'America/Santarem'), (176, b'America/Santiago'), (177, b'America/Santo_Domingo'), (178, b'America/Sao_Paulo'), (179, b'America/Scoresbysund'), (180, b'America/Sitka'), (181, b'America/St_Barthelemy'), (182, b'America/St_Johns'), (183, b'America/St_Kitts'), (184, b'America/St_Lucia'), (185, b'America/St_Thomas'), (186, b'America/St_Vincent'), (187, b'America/Swift_Current'), (188, b'America/Tegucigalpa'), (189, b'America/Thule'), (190, b'America/Thunder_Bay'), (191, b'America/Tijuana'), (192, b'America/Toronto'), (193, b'America/Tortola'), (194, b'America/Vancouver'), (195, b'America/Whitehorse'), (196, b'America/Winnipeg'), (197, b'America/Yakutat'), (198, b'America/Yellowknife'), (199, b'Antarctica/Casey'), (200, b'Antarctica/Davis'), (201, b'Antarctica/DumontDUrville'), (202, b'Antarctica/Macquarie'), (203, b'Antarctica/Mawson'), (204, b'Antarctica/McMurdo'), (205, b'Antarctica/Palmer'), (206, b'Antarctica/Rothera'), (207, b'Antarctica/Syowa'), (208, b'Antarctica/Troll'), (209, b'Antarctica/Vostok'), (210, b'Arctic/Longyearbyen'), (211, b'Asia/Aden'), (212, b'Asia/Almaty'), (213, b'Asia/Amman'), (214, b'Asia/Anadyr'), (215, b'Asia/Aqtau'), (216, b'Asia/Aqtobe'), (217, b'Asia/Ashgabat'), (218, b'Asia/Baghdad'), (219, b'Asia/Bahrain'), (220, b'Asia/Baku'), (221, b'Asia/Bangkok'), (222, b'Asia/Beirut'), (223, b'Asia/Bishkek'), (224, b'Asia/Brunei'), (225, b'Asia/Chita'), (226, b'Asia/Choibalsan'), (227, b'Asia/Colombo'), (228, b'Asia/Damascus'), (229, b'Asia/Dhaka'), (230, b'Asia/Dili'), (231, b'Asia/Dubai'), (232, b'Asia/Dushanbe'), (233, b'Asia/Gaza'), (234, b'Asia/Hebron'), (235, b'Asia/Ho_Chi_Minh'), (236, b'Asia/Hong_Kong'), (237, b'Asia/Hovd'), (238, b'Asia/Irkutsk'), (239, b'Asia/Jakarta'), (240, b'Asia/Jayapura'), (241, b'Asia/Jerusalem'), (242, b'Asia/Kabul'), (243, b'Asia/Kamchatka'), (244, b'Asia/Karachi'), (245, b'Asia/Kathmandu'), (246, b'Asia/Khandyga'), (247, b'Asia/Kolkata'), (248, b'Asia/Krasnoyarsk'), (249, b'Asia/Kuala_Lumpur'), (250, b'Asia/Kuching'), (251, b'Asia/Kuwait'), (252, b'Asia/Macau'), (253, b'Asia/Magadan'), (254, b'Asia/Makassar'), (255, b'Asia/Manila'), (256, b'Asia/Muscat'), (257, b'Asia/Nicosia'), (258, b'Asia/Novokuznetsk'), (259, b'Asia/Novosibirsk'), (260, b'Asia/Omsk'), (261, b'Asia/Oral'), (262, b'Asia/Phnom_Penh'), (263, b'Asia/Pontianak'), (264, b'Asia/Pyongyang'), (265, b'Asia/Qatar'), (266, b'Asia/Qyzylorda'), (267, b'Asia/Rangoon'), (268, b'Asia/Riyadh'), (269, b'Asia/Sakhalin'), (270, b'Asia/Samarkand'), (271, b'Asia/Seoul'), (272, b'Asia/Shanghai'), (273, b'Asia/Singapore'), (274, b'Asia/Srednekolymsk'), (275, b'Asia/Taipei'), (276, b'Asia/Tashkent'), (277, b'Asia/Tbilisi'), (278, b'Asia/Tehran'), (279, b'Asia/Thimphu'), (280, b'Asia/Tokyo'), (281, b'Asia/Ulaanbaatar'), (282, b'Asia/Urumqi'), (283, b'Asia/Ust-Nera'), (284, b'Asia/Vientiane'), (285, b'Asia/Vladivostok'), (286, b'Asia/Yakutsk'), (287, b'Asia/Yekaterinburg'), (288, b'Asia/Yerevan'), (289, b'Atlantic/Azores'), (290, b'Atlantic/Bermuda'), (291, b'Atlantic/Canary'), (292, b'Atlantic/Cape_Verde'), (293, b'Atlantic/Faroe'), (294, b'Atlantic/Madeira'), (295, b'Atlantic/Reykjavik'), (296, b'Atlantic/South_Georgia'), (297, b'Atlantic/St_Helena'), (298, b'Atlantic/Stanley'), (299, b'Australia/Adelaide'), (300, b'Australia/Brisbane'), (301, b'Australia/Broken_Hill'), (302, b'Australia/Currie'), (303, b'Australia/Darwin'), (304, b'Australia/Eucla'), (305, b'Australia/Hobart'), (306, b'Australia/Lindeman'), (307, b'Australia/Lord_Howe'), (308, b'Australia/Melbourne'), (309, b'Australia/Perth'), (310, b'Australia/Sydney'), (311, b'Canada/Atlantic'), (312, b'Canada/Central'), (313, b'Canada/Eastern'), (314, b'Canada/Mountain'), (315, b'Canada/Newfoundland'), (316, b'Canada/Pacific'), (317, b'Europe/Amsterdam'), (318, b'Europe/Andorra'), (319, b'Europe/Athens'), (320, b'Europe/Belgrade'), (321, b'Europe/Berlin'), (322, b'Europe/Bratislava'), (323, b'Europe/Brussels'), (324, b'Europe/Bucharest'), (325, b'Europe/Budapest'), (326, b'Europe/Busingen'), (327, b'Europe/Chisinau'), (328, b'Europe/Copenhagen'), (329, b'Europe/Dublin'), (330, b'Europe/Gibraltar'), (331, b'Europe/Guernsey'), (332, b'Europe/Helsinki'), (333, b'Europe/Isle_of_Man'), (334, b'Europe/Istanbul'), (335, b'Europe/Jersey'), (336, b'Europe/Kaliningrad'), (337, b'Europe/Kiev'), (338, b'Europe/Lisbon'), (339, b'Europe/Ljubljana'), (340, b'Europe/London'), (341, b'Europe/Luxembourg'), (342, b'Europe/Madrid'), (343, b'Europe/Malta'), (344, b'Europe/Mariehamn'), (345, b'Europe/Minsk'), (346, b'Europe/Monaco'), (347, b'Europe/Moscow'), (348, b'Europe/Oslo'), (349, b'Europe/Paris'), (350, b'Europe/Podgorica'), (351, b'Europe/Prague'), (352, b'Europe/Riga'), (353, b'Europe/Rome'), (354, b'Europe/Samara'), (355, b'Europe/San_Marino'), (356, b'Europe/Sarajevo'), (357, b'Europe/Simferopol'), (358, b'Europe/Skopje'), (359, b'Europe/Sofia'), (360, b'Europe/Stockholm'), (361, b'Europe/Tallinn'), (362, b'Europe/Tirane'), (363, b'Europe/Uzhgorod'), (364, b'Europe/Vaduz'), (365, b'Europe/Vatican'), (366, b'Europe/Vienna'), (367, b'Europe/Vilnius'), (368, b'Europe/Volgograd'), (369, b'Europe/Warsaw'), (370, b'Europe/Zagreb'), (371, b'Europe/Zaporozhye'), (372, b'Europe/Zurich'), (373, b'GMT'), (374, b'Indian/Antananarivo'), (375, b'Indian/Chagos'), (376, b'Indian/Christmas'), (377, b'Indian/Cocos'), (378, b'Indian/Comoro'), (379, b'Indian/Kerguelen'), (380, b'Indian/Mahe'), (381, b'Indian/Maldives'), (382, b'Indian/Mauritius'), (383, b'Indian/Mayotte'), (384, b'Indian/Reunion'), (385, b'Pacific/Apia'), (386, b'Pacific/Auckland'), (387, b'Pacific/Bougainville'), (388, b'Pacific/Chatham'), (389, b'Pacific/Chuuk'), (390, b'Pacific/Easter'), (391, b'Pacific/Efate'), (392, b'Pacific/Enderbury'), (393, b'Pacific/Fakaofo'), (394, b'Pacific/Fiji'), (395, b'Pacific/Funafuti'), (396, b'Pacific/Galapagos'), (397, b'Pacific/Gambier'), (398, b'Pacific/Guadalcanal'), (399, b'Pacific/Guam'), (400, b'Pacific/Honolulu'), (401, b'Pacific/Johnston'), (402, b'Pacific/Kiritimati'), (403, b'Pacific/Kosrae'), (404, b'Pacific/Kwajalein'), (405, b'Pacific/Majuro'), (406, b'Pacific/Marquesas'), (407, b'Pacific/Midway'), (408, b'Pacific/Nauru'), (409, b'Pacific/Niue'), (410, b'Pacific/Norfolk'), (411, b'Pacific/Noumea'), (412, b'Pacific/Pago_Pago'), (413, b'Pacific/Palau'), (414, b'Pacific/Pitcairn'), (415, b'Pacific/Pohnpei'), (416, b'Pacific/Port_Moresby'), (417, b'Pacific/Rarotonga'), (418, b'Pacific/Saipan'), (419, b'Pacific/Tahiti'), (420, b'Pacific/Tarawa'), (421, b'Pacific/Tongatapu'), (422, b'Pacific/Wake'), (423, b'Pacific/Wallis'), (424, b'US/Alaska'), (425, b'US/Arizona'), (426, b'US/Central'), (427, b'US/Eastern'), (428, b'US/Hawaii'), (429, b'US/Mountain'), (430, b'US/Pacific'), (431, b'UTC')])),
                ('d_availability', models.TextField(null=True, verbose_name=b'When do you plan to perform your staff tasks on WEEKDAYS (Monday to Friday)? (in your timezone)')),
                ('d_weekend_availability', models.TextField(null=True, verbose_name=b'When do you plan to perform your staff tasks on WEEKENDS (Saturday and Sunday)? (in your timezone)')),
                ('availability_details', models.TextField(help_text=b"if your schedule doesn't match the weekdays / weekends schema", null=True, verbose_name=b'Availability details')),
                ('experience', models.TextField(help_text=b"What are your previous/current experiences as an admin, moderator or middleman in the game's community or similar?", null=True, verbose_name=b'Experience with the community')),
                ('other_experience', models.TextField(help_text=b'Other relevant experience as an admin/moderator, your professional background, education, experience working with people, managing social networks, etc.', null=True, verbose_name=b'Other experience')),
                ('owner', models.OneToOneField(related_name='staff_details', to=settings.AUTH_USER_MODEL, on_delete=models.CASCADE)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
    ]
